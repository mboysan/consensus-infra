#------------------------------------------------------------------------------------------------------------
# Playbook that starts an etcd cluster and performs load tests on it with the provided params.
# It then sends client (YCSB) metrics to processors and cleans up the workers.
#------------------------------------------------------------------------------------------------------------

---
# ------------------------------------------------------------------------------------ Runtime configuration
- import_playbook: util_runtime_config.yaml

# ------------------------------------------------------------------------------------ Load test
- name: Starts all etcd KV stores
  hosts: nodes
  tasks:
    - name: Starting all etcd KV stores (async)
      shell:
        cmd: |
          set -m
          
          # run in background
          bash -ilc '
            etcdMyPeerIp=$(~/private_ip.sh); echo $etcdMyPeerIp;
            ./etcd  --name "node{{ nodes_GROUP_current_node_id }}" \
                    --initial-advertise-peer-urls "http://$etcdMyPeerIp:{{ nodes_GROUP_node_serving_port }}" \
                    --listen-peer-urls "http://$etcdMyPeerIp:{{ nodes_GROUP_node_serving_port }}" \
                    --listen-client-urls "http://$etcdMyPeerIp:{{ nodes_GROUP_client_serving_port }}" \
                    --advertise-client-urls "http://$etcdMyPeerIp:{{ nodes_GROUP_client_serving_port }}" \
                    --initial-cluster-token my-etcd-cluster-1 \
                    --initial-cluster "{{ workers_GROUP_etcd_node_destinations }}" \
                    --data-dir {{ nodes_GROUP_etcd_working_dir }}/data \
                    --initial-cluster-state new &> {{ workers_GROUP_project_log_file }}' &
          
          bash -ilc 'sleep 1m'
        chdir: "{{ nodes_GROUP_etcd_working_dir }}"
      async: 100
      poll: 0
      register: start_stores_task

    - name: Waiting stores to start
      async_status:
        jid: "{{ start_stores_task.ansible_job_id }}"
      register: job_result
      until: job_result.finished
      retries: 100
      delay: 10

- name: Starts client(s)
  hosts: clients
  tasks:
    - name: Starting client(s) (perf test)
      shell:
        cmd: |
          set -m
          
          workload="{{ workload }}"
          workloadFile="{{ clients_GROUP_workloads_dir }}/{{ workload }}"
          if [ ! -f "$workloadFile" ]; then
            echo "received custom workload:"
            echo "$workload"
            echo "$workload" > "{{ clients_GROUP_workloads_dir }}/workload_file"
          else
            cp "$workloadFile" "{{ clients_GROUP_workloads_dir }}/workload_file"
          fi
          
          bash -ilc 'export JAVA_OPTS="-Dlog4j.configuration=file:{{ workers_GROUP_project_log_config_file}}" && \
                      ./bin/ycsb.sh run etcd {{ _metrics_params }} {{ _client_params }} -P {{ clients_GROUP_workloads_dir }}/workload_file'
        chdir: "{{ clients_GROUP_working_dir }}"
      vars:
        _metrics_params: >-
          -p measurementtype=raw
          -p measurement.raw.output_file={{ workers_GROUP_project_metrics_file }}
          -p measurement.raw.graphite=true
          -p measurement.raw.separator=,
          -p exportfile={{ workers_GROUP_project_metrics_file }}
        _client_params: >-
          -p cluster.members={{ workers_GROUP_etcd_store_destinations }}

- import_playbook: util_stop_workers.yaml

- import_playbook: util_send_metrics.yaml
  vars:
    consensus_protocol: "etcd_raft"
    analyze_store_jvm_metrics: false
    analyze_store_message_metrics: false

- import_playbook: util_cleanup_workers.yaml