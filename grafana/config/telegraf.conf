[agent]
  interval = "10s"
  metric_batch_size = 1000000
  metric_buffer_limit = 10000000
  round_interval = false
  flush_interval = "5s"
  flush_jitter = "0s"
  precision = ""
  omit_hostname = true
  debug = true

[[inputs.file]]
  alias = "in_store_metrics"
  files = ["/var/log/*store*metrics.csv"]
  data_format = "csv"
  csv_header_row_count = 0
  csv_column_names = ["metric","value","timestamp"]
  csv_column_types = ["string", "float", "unix"]
  csv_timestamp_column = "timestamp"
  csv_timestamp_format = "unix"
  csv_tag_columns = ["metric"]
  file_tag = "filename"
  [inputs.file.tags]
  bucket = "store_metrics"

[[inputs.file]]
  alias = "in_client_metrics_raw"
  files = ["/var/log/*client*raw.csv"]
  data_format = "csv"
  csv_header_row_count = 0
  csv_column_names = ["metric","timestamp","value"]
  csv_column_types = ["string", "unix_ms", "float"]
  csv_timestamp_column = "timestamp"
  csv_timestamp_format = "unix_ms"
  csv_tag_columns = ["metric"]
  file_tag = "filename"
  precision = "100ms"
  [inputs.file.tags]
  bucket = "client_metrics_raw"

[[outputs.influxdb_v2]]
  alias = "out_client_metrics_raw"
  urls = ["http://influxdb:8086"]
  organization = "mboysan_org"
  token = "${INFLUX_TOKEN}"
  bucket = "client_metrics_raw"
  [outputs.influxdb_v2.tagpass]
  bucket = ["client_metrics_raw"]

[[outputs.influxdb_v2]]
  alias = "out_store_metrics"
  urls = ["http://influxdb:8086"]
  organization = "mboysan_org"
  token = "${INFLUX_TOKEN}"
  bucket = "store_metrics"
  [outputs.influxdb_v2.tagpass]
  bucket = ["store_metrics"]
