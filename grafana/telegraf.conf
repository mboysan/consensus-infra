[agent]
  interval = "10s"
  flush_interval = "3s"
  metric_batch_size = 100000
  metric_buffer_limit = 1000000
  round_interval = true
  collection_jitter = "0s"
  flush_jitter = "0s"
  precision = ""
  omit_hostname = true

[[inputs.file]]
  files = ["/var/log/*store*metrics.csv"]
  data_format = "csv"
  csv_header_row_count = 0
  csv_column_names = ["metric","value","timestamp"]
  csv_column_types = ["string", "float", "unix"]
  csv_timestamp_column = "timestamp"
  csv_timestamp_format = "unix"
  csv_tag_columns = ["metric"]
  file_tag = "filename"
  [inputs.file.tags]
  bucket = "storemetrics"

[[inputs.file]]
  files = ["/var/log/*client*raw.csv"]
  data_format = "csv"
  csv_header_row_count = 0
  csv_column_names = ["metric","timestamp","value"]
  csv_column_types = ["string", "unix_ms", "float"]
  csv_timestamp_column = "timestamp"
  csv_timestamp_format = "unix_ms"
  csv_tag_columns = ["metric"]
  file_tag = "filename"
  [inputs.file.tags]
  bucket = "clientmetrics"

[[outputs.influxdb_v2]]
  urls = ["http://influxdb:8086"]
  organization = "myorg"
  token = "${INFLUX_TOKEN}"
  bucket = "clientmetrics"
  [outputs.influxdb_v2.tagpass]
  bucket = ["clientmetrics"]

[[outputs.influxdb_v2]]
  urls = ["http://influxdb:8086"]
  organization = "myorg"
  token = "${INFLUX_TOKEN}"
  bucket = "storemetrics"
  [outputs.influxdb_v2.tagpass]
  bucket = ["storemetrics"]
